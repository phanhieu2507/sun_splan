apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-web
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      annotations:
        {{- with .Values.web.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      {{- include "splan.images.pullSecrets" . | indent 6 }}
      containers:
      - name: webserver
        image: {{ template "splan.images.web" . }}
        imagePullPolicy: {{ .Values.web.image.pullPolicy | quote }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: SERVER_API_HOST
          value: http://{{ include "common.names.fullname" . }}-api
        {{- range $name, $value := .Values.web.extraEnvVars }}
        {{ $name }}: {{ $value | quote }}
        {{- end }}
        {{- if .Values.web.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.web.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.web.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.web.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.web.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.web.resources | nindent 12 }}
        {{- if .Values.web.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.web.containerSecurityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
      {{- if .Values.web.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.web.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.web.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.web.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.web.podAffinityPreset "component" "web" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.web.podAntiAffinityPreset "component" "web" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.web.nodeAffinityPreset.type "key" .Values.web.nodeAffinityPreset.key "values" .Values.web.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.web.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.web.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.web.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.web.tolerations "context" $) | nindent 8 }}
      {{- end }}
